<!--======================================================================
Build file for OpenSextantToolbox.  
=======================================================================-->
<project name="OpenSextantToolbox" basedir="." default="jar" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- include properties -->
	<property file="build.properties" />

	<property name="version" value="2.0" />

	<!-- Name of the project -->
	<property name="project.name" value="OpenSextantToolbox" />
	<property name="java_level" value="1.6" />

	<!-- Source directory - contains the Java source files for this project -->
	<property name="src.dir" location="src" />

	<!-- directory to contain the jar -->
	<property name="build.dir" location="build" />

	<!-- documentation directory -->
	<property name="doc.dir" location="${basedir}/doc" />

	<!-- JavaDoc documentation directory -->
	<property name="javadoc.dir" location="${basedir}/doc/javadoc" />

	<!-- lib directories  -->
	<property name="lib.dir" location="lib" />
	<property name="lib.externals.dir" location="externals" />
	<!--property name="solr.lib.dir" location="lib/solr" /-->

	<!-- directory to contain the release -->
	<property name="release.dir" location="${basedir}/release" />

	<!-- location of the Language Resources directory -->
	<property name="resources.home" location="../LanguageResources" />

	<!-- location of the Gazetteer project -->
	<property name="gaz.home" location="../Gazetteer" />


	<!-- location for the generated JAR file -->
	<property name="jar.location" location="${build.dir}/${project.name}.jar" />

	<!-- location of the license file -->
	<property name="license.location" location="../LICENSE.txt" />


	<!-- Classpath to compile -->
	<path id="compile.classpath">
		<fileset dir="${lib.dir}/GATE" includes="**/*.jar" />
		<fileset dir="${lib.dir}/Solr" includes="**/*.jar" />
		<fileset dir="${lib.dir}/Plugin" includes="**/*.jar" />
		<fileset dir="${basedir}/externals" includes="**/*.jar" />
	</path>

	<!-- Classpath to run - only used to load solr gazetteer -->
	<path id="runtime.classpath">
		<fileset dir="${lib.dir}/Solr" includes="**/*.jar" />
		<fileset file="${lib.dir}/log4j.properties" />
	</path>

	<property name="fieldnames" value="id,place_id,name,lat,lon,feat_class,feat_code,FIPS_cc,cc,ISO3_cc,adm1,adm2,adm3,,,source,,,,,name_bias,id_bias,name_type,," />
	<property name="csv" value="${resources.home}/resources/geoGazetteer/MergedGazetteer.txt" />
	<property name="solr.home" location="${basedir}/release/Gazetteer/solr" />
	

	<!--====================== Targets ============================-->
	<target name="setup">
		<mkdir dir="${build.dir}" />
	</target>

	<!-- clean up created jars  -->
	<target name="clean" depends="javadoc.clean">
		<delete dir="${build.dir}" />
		<delete dir="${release.dir}" />

		<mkdir dir="${build.dir}" />
		<mkdir dir="${release.dir}" />
	</target>


	<!-- clean up javadocs  -->
	<target name="javadoc.clean">
		<delete dir="${basedir}/doc/javadoc" />
	</target>

	<!-- clean up the ivy cache  -->
	<target name="clean-ivy-cache" depends="clean" description="Purge ivy cache">
		<ivy:cleancache />
	</target>

	<!-- get all the ivy defined dependencies -->
	<target name="resolve" depends="clean" description="--> resolve and retrieve dependencies with ivy">
		<ivy:retrieve pattern="${ivy.lib.dir}/[conf]/[artifact].[ext]" />
	</target>


	<!-- compile the source  -->
	<target name="compile" depends="setup">
		<javac classpathref="compile.classpath" srcdir="${src.dir}" destdir="${build.dir}" debug="true" debuglevel="lines,source" source="${java_level}" encoding="utf-8" />
	</target>

	<!-- create the JAR files -->
	<target name="jar" depends="compile">

		<jar destfile="${jar.location}" update="false" basedir="${build.dir}">
			<include name="org/mitre/opensextant/**" />
		</jar>
		<jar destfile="${jar.location}" update="true" basedir="${gaz.home}/GazetteerETL/Resources">
			<include name="country-names-2013.csv" />
			<include name="feature-metadata-2013.csv" />
		</jar>

	</target>

	<!-- create JavaDoc directory -->
	<target name="javadoc.prepare">
		<delete dir="${javadoc.dir}" />
		<mkdir dir="${javadoc.dir}" />
	</target>

	<!-- Generate JavaDoc documentation for this project -->
	<target name="javadoc" depends="javadoc.prepare">
		<javadoc destdir="${javadoc.dir}" packagenames="*" classpathref="compile.classpath" encoding="utf-8" access="public" windowtitle="OpenSextant JavaDoc" source="${java_level}">
			<sourcepath>
				<pathelement location="${src.dir}" />
			</sourcepath>
		</javadoc>
	</target>

	<!-- Build the jars and jar dependencies.  -->
	<target name="build" depends="jar" />




	<!-- create release directory structure -->
	<target name="release.prepare">
		<delete dir="${release.dir}" />

		<mkdir dir="${release.dir}" />
		<mkdir dir="${release.dir}/lib" />
		<mkdir dir="${release.dir}/plugins" />
		<mkdir dir="${release.dir}/plugins/OpenSextantToolbox" />
		<mkdir dir="${release.dir}/resources" />
		<mkdir dir="${release.dir}/Gazetteer" />
		<mkdir dir="${release.dir}/etc" />
		<mkdir dir="${release.dir}/testData" />
	</target>


	<!-- copy over jars to the release directory -->
	<target name="release.libs" depends="jar">

		<copy todir="${release.dir}/lib">
			<fileset dir="${basedir}/lib/solr">
				<include name="*.jar" />
			</fileset>
		</copy>

		<copy todir="${release.dir}/lib">
			<fileset dir="${basedir}/lib/Plugin">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	<!-- copy over the plugin to the release directory -->
	<target name="release.plugin" depends="jar">
		<copy file="${basedir}/creole.xml" tofile="${release.dir}/plugins/OpenSextantToolbox/creole.xml" />
		<copy todir="${release.dir}/plugins/OpenSextantToolbox/lib">
			<fileset dir="${basedir}/lib/Plugin">
				<include name="*.jar" />
			</fileset>
			<fileset file="${build.dir}/OpenSextantToolbox.jar" />
			<fileset file="${basedir}/externals/JITAR.jar" />
		</copy>
	</target>


	<!-- Copy over the resource files -->
	<target name="release.resources">
		<copy todir="${release.dir}/resources">
			<fileset dir="${resources.home}/resources" />
		</copy>
	</target>




	<!-- Copy over the shell scripts, configuration, and basic test data -->
	<target name="release.misc">
		<copy todir="${release.dir}/test">
			<fileset dir="${basedir}/test">
				<filename name="*.txt" />
			</fileset>
		</copy>
		<copy todir="${release.dir}/resources" file="${basedir}/test/log4j.properties" />
	</target>

	<!-- Build and populate the Solr gazetteer -->
	<target name="release.gaz">
		<antcall target="create-solr-home" />
		<antcall target="loadGazetteer" />
		<antcall target="build-fst" />
	</target>
	<!-- Prepare Solr Home-->

	<!-- 1. create Solr home 
      2. copy Solr home skeleton
      3. unpack solr4-conf.zip to gaz/conf/.
      4. copy runtime libs - SolrTextTagger, OpenSextantToolbox, servlet-api  - to gaz/lib
       -->
	
	<target name="create-solr-home">
		<mkdir dir="${solr.home}" />
		<mkdir dir="${solr.home}/gazetteer" />
		<mkdir dir="${solr.home}/gazetteer/data" />

		<!-- Unpack Solr4 config baseline-->
		<unzip src="${basedir}/solr/solr4-conf.zip" dest="${solr.home}/gazetteer/." />

		<!-- Gaz and SolrTextTagger Solr config -->
		<copy todir="${solr.home}/" file="${basedir}/solr/solr.xml" />
		<copy todir="${solr.home}/gazetteer/conf">
			<fileset dir="${basedir}/solr/gazetteer/conf">
				<!-- Include character mappings, schema, server config -->
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="loadGazetteer">
		<java classname="org.opensextant.solrtexttagger.EmbeddedSolrUpdater" classpathref="runtime.classpath" fork="yes" dir="${basedir}">
			<jvmarg value="-Xmx2G" />
			<!-- This MaxPermSize appears to be helpful for loading numerous JARs -->
			<jvmarg value="-XX:MaxPermSize=256m" />
			<jvmarg value="-Dopensextant.home=${opensextant.home}" />
			<jvmarg value="-Dsolr.solr.home=${solr.home}" />
			<arg value="--input=${csv}" />
			<arg value="/update?update.contentType=text/csv&amp;skipLines=1&amp;optimize=true&amp;separator=%09&amp;header=false&amp;trim=on&amp;fieldnames=${fieldnames}" />
		</java>
	</target>

	<!-- 2 GB to build current gazetteer with 13 million rows -->
	<target name="build-fst">
		<java classname="org.opensextant.solrtexttagger.EmbeddedSolrUpdater" classpathref="runtime.classpath" fork="yes" dir="${basedir}">
			<jvmarg value="-Xmx2G" />
			<!-- This MaxPermSize appears to be helpful for loading numerous JARs -->
			<jvmarg value="-XX:MaxPermSize=256m" />
			<jvmarg value="-Dopensextant.home=${opensextant.home}" />
			<jvmarg value="-Dsolr.solr.home=${solr.home}" />
			<arg value="/tag?build=true" />
		</java>
	</target>
	
	<!-- copy over everything to the release directory -->
	<target name="release" depends="build, release.prepare, release.libs, release.plugin,release.resources,release.gaz,release.misc" />

	
	<!-- deploy OpenSextantToolbox locally to test  - and note, this copies the plugin bundle into your GATE7 install
    -->
	<target name="toolbox.deploy" depends="release">
		<!-- create the target directory under GATE_HOME/plugins -->
		<delete dir="${gate7.home}/plugins/OpenSextantToolbox" />
		<mkdir dir="${gate7.home}/plugins/OpenSextantToolbox" />

		<!-- copy over the plugin from the release dir -->
		<copy todir="${gate7.home}/plugins/OpenSextantToolbox">
			<fileset dir="${release.dir}/plugins/OpenSextantToolbox"/>
		</copy>
		
	</target>
	
	
</project>
